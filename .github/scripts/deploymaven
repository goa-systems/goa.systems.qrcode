#!/usr/bin/env bash

# Checks and installs Java and Maven on demand.
setup_env () {

    local JAVAVERS="zulu21.36.17-ca-jdk21.0.4-linux_x64"
    local MAVENVERS="3.9.9"
    local MAVENDIST="apache-maven-${MAVENVERS}"

    local LOCALCACHEDIR="${HOME}/.buildtools"
    local TMPDIR="/tmp/$(uuidgen)"

    if [ -d "${TMPDIR}" ]; then rm -rf "${TMPDIR}"; fi
    mkdir -p "${TMPDIR}"

    if [ -d "${LOCALCACHEDIR}/maven/${MAVENDIST}" ]
    then
        echo "Maven is present in ${LOCALCACHEDIR}/maven/${MAVENDIST}. Skipping installation"
    else
        echo "Installing maven to ${LOCALCACHEDIR}/maven/${MAVENDIST}"
        if [ ! -d "${LOCALCACHEDIR}/maven" ]; then mkdir -p "${LOCALCACHEDIR}/maven"; fi
        DISTMAVEN="https://dlcdn.apache.org/maven/maven-3/${MAVENVERS}/binaries/${MAVENDIST}-bin.tar.gz"
        wget --quiet -O "${TMPDIR}/maven.tar.gz" "${DISTMAVEN}"
        tar -x -f "${TMPDIR}/maven.tar.gz" -C "${LOCALCACHEDIR}/maven"
        rm "${TMPDIR}/maven.tar.gz"
    fi

    if [ -d "${LOCALCACHEDIR}/java/${JAVAVERS}" ]
    then
        echo "Java is present in ${LOCALCACHEDIR}/java/${JAVAVERS}. Skipping installation"
    else
        echo "Installing Java to ${LOCALCACHEDIR}/java/${JAVAVERS}"
        if [ ! -d "${LOCALCACHEDIR}/java" ]; then mkdir -p "${LOCALCACHEDIR}/java"; fi
        DISTJAVA="https://cdn.azul.com/zulu/bin/${JAVAVERS}.tar.gz"
        wget --quiet -O "${TMPDIR}/java.tar.gz" "${DISTJAVA}"
        tar -x -f "${TMPDIR}/java.tar.gz" -C "${LOCALCACHEDIR}/java"
        rm "${TMPDIR}/java.tar.gz"
    fi

    OLD_PATH="${PATH}"
    OLD_JAVAHOME="${JAVA_HOME}"
    PATH="${LOCALCACHEDIR}/java/${JAVAVERS}/bin:${LOCALCACHEDIR}/maven/${MAVENDIST}/bin:$PATH"
    JAVA_HOME="${LOCALCACHEDIR}/java/${JAVAVERS}"

    echo "================"
    mvn --version
    echo "================"
    java --version
    echo "================"

    rm -rf "${TMPDIR}"
}

# Resets the environment to the original state.
unset_env () {
    PATH="${OLD_PATH}"
    JAVA_HOME="${OLD_JAVAHOME}"
    unset OLD_PATH
    unset OLD_JAVAHOME
}

setup_env

DIST="$1"
GROUP="$2"
ARTIFACT="$3"
VERSION="$4"

DIR="/tmp/$(uuidgen)"
mkdir "${DIR}"
tar -x -f "${DIST}" -C "${DIR}"

ARTIFACTS_BASEPATH="${DIR}/${ARTIFACT}-${VERSION}"

mvn deploy:deploy-file \
 -Dfile="${ARTIFACTS_BASEPATH}.jar" \
 -Dsources="${ARTIFACTS_BASEPATH}-sources.jar" \
 -Djavadoc="${ARTIFACTS_BASEPATH}-javadoc.jar" \
 -DgroupId="${GROUP}" \
 -DartifactId="${ARTIFACT}" \
 -Dversion="${VERSION}" \
 -Dpackaging="jar" \
 -DpomFile="${ARTIFACTS_BASEPATH}.pom" \
 -DcreateChecksum="true" \
 -Durl="file:/var/www/mvn"

rm -rf "${DIR}"

unset_env
