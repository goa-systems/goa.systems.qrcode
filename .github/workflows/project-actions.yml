name: build-qrcode-project
run-name: Build QRCode project

on: [push,workflow_dispatch]

env:
  ARTIFACT_GROUP: "goa.systems"
  ARTIFACT_ID: "qrcode"
  ARTIFACT_VERSION: 0.0.11
  JAVA_VERSION: 17

jobs:
  build-qrcode-lib:
    runs-on: self-hosted
    steps:
      - name: Set permissions
        run: docker run --rm -v "$PWD":/project bash:latest chown --recursive $(id -u):$(id -g) /project
      - uses: actions/checkout@v4
      - name: Build project
        run: |
          docker run --rm -v "$PWD":/home/gradle/project -w /home/gradle/project gradle:jdk$JAVA_VERSION gradle \
          -PARTIFACT_GROUP=$ARTIFACT_GROUP \
          -PARTIFACT_ID=$ARTIFACT_ID \
          -PARTIFACT_VERSION=$ARTIFACT_VERSION \
          -PJAVA_VERSION=$JAVA_VERSION \
          -PSAVE_GENERATED_IMAGES=false \
          distribute
      - name: Set permissions
        run: |
          docker run --rm -v "$PWD":/project bash:latest chown --recursive $(id -u):$(id -g) /project
      - run: |
          docker run \
          --rm \
          -v "${PWD}:/usr/src" \
          -e SONAR_SCANNER_OPTS="-Dsonar.host.url=${{ vars.SQSERVER }} -Dsonar.token=${{ secrets.SQTOKEN }} -Dsonar.projectKey=goa.systems.qrcode -Dsonar.sources=src/main -Dsonar.java.libraries=build/libs -Dsonar.java.binaries=build/classes -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml -Dsonar.junit.reportsPath=build/test-results -Xdiag" \
          --network host \
          sonarsource/sonar-scanner-cli
        if: ${{ github.ref == 'refs/heads/main' }}
      - run: |
          FILENAME=$ARTIFACT_ID-$ARTIFACT_VERSION.tar.gz
          scp build/distributions/$FILENAME foo@tools.goa.systems:/tmp/$FILENAME
          ssh foo@tools.goa.systems "bash -s" < ".github/scripts/deploymaven" "/tmp/$FILENAME" "$ARTIFACT_GROUP" "$ARTIFACT_ID" "$ARTIFACT_VERSION"
          ssh foo@tools.goa.systems "rm /tmp/$FILENAME"
        if: ${{ github.ref == 'refs/heads/main' }}
      - name: Set permissions
        run: |
          docker run --rm -v "$PWD":/project bash:latest chown --recursive $(id -u):$(id -g) /project